<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>LY</title>
    <description></description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 10 Oct 2017 10:30:25 +0800</pubDate>
    <lastBuildDate>Tue, 10 Oct 2017 10:30:25 +0800</lastBuildDate>
    <generator>Jekyll v3.5.0</generator>
    
      <item>
        <title>http中有趣的referer</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#什么是referer头&quot; id=&quot;markdown-toc-什么是referer头&quot;&gt;什么是referer头&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;什么是referer头&quot;&gt;什么是referer头&lt;/h3&gt;

&lt;blockquote&gt;
  referer请求头让服务器能够拿到请求资源的来源。比如我在www.weibo.com里面点击一个www.baidu.com的链接，那么在www.baidu.com的页面的header信息里就会有Referer=www.weibo.com。&lt;br /&gt;
  referer可以用于分析用户的兴趣爱好、收集日志、优化缓存等等。也可以让服务器发现过时的和错误的链接并及时维护。
&lt;/blockquote&gt;

referer有很多合法的用例，例如找到你网站上的死链、追踪错误或找到用户是通过哪些搜索条件找到你的网站的。

可以用来提高网站的安全性，检查referer头是一个阻止跨站请求伪造的办法。

</description>
        <pubDate>Tue, 15 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/15/http-referrer/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/15/http-referrer/</guid>
        
        <category>Http</category>
        
        <category>前端安全性</category>
        
        
        <category>Http</category>
        
      </item>
    
      <item>
        <title>前端工程师面试题解答一</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#说一说你了解的css盒模型&quot; id=&quot;markdown-toc-说一说你了解的css盒模型&quot;&gt;说一说你了解的css盒模型&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

面试的时候主要看简历发挥，所以简历不能写得太浮夸，要不然面试官问到你都答不上来。

&lt;h3 id=&quot;说一说你了解的css盒模型&quot;&gt;说一说你了解的css盒模型&lt;/h3&gt;

&lt;img src=&quot;http://os8ri8oj4.bkt.clouddn.com/css-border-02.png&quot; alt=&quot;css盒模型&quot; /&gt;

</description>
        <pubDate>Mon, 14 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/14/base/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/14/base/</guid>
        
        <category>面试</category>
        
        
        <category>面试</category>
        
      </item>
    
      <item>
        <title>前端工程师面试题解答二</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#在制作一个网页应用或网站的过程中你是如何考虑其-ui安全性高性能seo可维护性以及技术因素的&quot; id=&quot;markdown-toc-在制作一个网页应用或网站的过程中你是如何考虑其-ui安全性高性能seo可维护性以及技术因素的&quot;&gt;在制作一个网页应用或网站的过程中，你是如何考虑其 UI、安全性、高性能、SEO、可维护性以及技术因素的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;在制作一个网页应用或网站的过程中你是如何考虑其-ui安全性高性能seo可维护性以及技术因素的&quot;&gt;在制作一个网页应用或网站的过程中，你是如何考虑其 UI、安全性、高性能、SEO、可维护性以及技术因素的&lt;/h3&gt;

UI:

ui的话，那要看是什么类型的页面了，比如说移动端的活动页，要炫酷、要有个性，当然也要符合它的主题。像普通的文章浏览页面，要美观、整洁。那像后台管理系统这种，就需要简单大方了。当然，不管是移动端还是pc端，我觉得最重要的还是用户体验了，对ui的选择和放置的位置要符合大部分用户的使用习惯。你不能因为你自己是左撇子，就把登录框的登陆按钮放左边吧，那不合适啊。

</description>
        <pubDate>Mon, 14 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/14/base-2/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/14/base-2/</guid>
        
        <category>面试</category>
        
        
        <category>面试</category>
        
      </item>
    
      <item>
        <title>浏览器v8引擎</title>
        <description>
V8是一个全新的javascript引擎，它在设计之初就以高效的执行javascript大型应用为目的。在一些性能测试中，它比IE的JScript、firefox的SpiderMonkey以及Safari的JavascriptCore要快上数倍。

如果你的web程序的瓶颈在于javascript的运行效率，那么用v8代替你现在的javascript引擎很可能提升你的程序的运行效率。

v8带来的性能提升主要表现在三个部分：

&lt;blockquote&gt;
  快速属性访问&lt;br /&gt;
  动态机器码生成&lt;br /&gt;
  高效的垃圾收集
&lt;/blockquote&gt;

</description>
        <pubDate>Fri, 11 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/11/v8/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/11/v8/</guid>
        
        <category>V8</category>
        
        
        <category>V8</category>
        
      </item>
    
      <item>
        <title>前端工程化思想</title>
        <description>
&lt;blockquote&gt;
  前端工程化是一个高程次的思想，可以理解为模块化和组件化是工程化的表现形式。
&lt;/blockquote&gt;

另一种解释，更详细的工程化前端系统：

&lt;blockquote&gt;
  技术业务相关：&lt;br /&gt;
    1. 开发规范&lt;br /&gt;
    2. 模块化开发&lt;br /&gt;
    3. 组件化开发&lt;br /&gt;
  技术沉淀及共享需求：&lt;br /&gt;
    4. 组件仓库&lt;br /&gt;
  工程优化需求：&lt;br /&gt;
    5. 性能优化&lt;br /&gt;
    6. 项目部署&lt;br /&gt;
    7. 开发流程&lt;br /&gt;
    8. 开发工具
&lt;/blockquote&gt;

&lt;blockquote&gt;
  大部分我们谈“工程化”，其实只是“工具化”
&lt;/blockquote&gt;

</description>
        <pubDate>Thu, 03 Aug 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/08/03/project-think/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/08/03/project-think/</guid>
        
        <category>概念</category>
        
        <category>面试</category>
        
        
        <category>抽象</category>
        
      </item>
    
      <item>
        <title>为什么要使用https代替http</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#什么是https&quot; id=&quot;markdown-toc-什么是https&quot;&gt;什么是https&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;什么是https&quot;&gt;什么是https&lt;/h3&gt;

&lt;blockquote&gt;
  简单地讲， HTTPS 是加过密的 HTTP。这样，由于网路上传输的数据是加密的，在浏览网页时，除了你自己可以看到你在看什么网页，第三方是无法得知你在干什么的。
&lt;/blockquote&gt;

</description>
        <pubDate>Mon, 31 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/31/why-use-https/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/31/why-use-https/</guid>
        
        <category>Https</category>
        
        <category>安全性</category>
        
        
        <category>安全性</category>
        
      </item>
    
      <item>
        <title>为gitPage静态网站添加service worker离线访问功能</title>
        <description>&lt;ul id=&quot;markdown-toc&quot;&gt;
  &lt;li&gt;&lt;a href=&quot;#先决条件&quot; id=&quot;markdown-toc-先决条件&quot;&gt;先决条件：&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;先决条件&quot;&gt;先决条件：&lt;/h3&gt;

1.浏览器支持

&lt;a href=&quot;https://jakearchibald.github.io/isserviceworkerready/&quot;&gt;支持的浏览器&lt;/a&gt;

2.https协议

在开发过程中，可以通过 localhost 使用服务工作线程，但如果要在网站上部署服务工作线程，需要在服务器上设置 HTTPS。注意，本地修改hosts，自定义域名映射到localhost的不生效。

</description>
        <pubDate>Mon, 31 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/31/service-worker/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/31/service-worker/</guid>
        
        <category>Html5</category>
        
        <category>Javascript</category>
        
        
        <category>Html5</category>
        
      </item>
    
      <item>
        <title>正则表达式</title>
        <description>
正则表达式笔记：

&lt;ol&gt;
  &lt;li&gt;将中划线和下划线分隔的命名转换成大写驼峰命名&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 27 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/27/every-day-reg/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/27/every-day-reg/</guid>
        
        <category>Javascript</category>
        
        <category>regularExpr</category>
        
        
        <category>Javascript</category>
        
      </item>
    
      <item>
        <title>icoMoon 免费开源字体</title>
        <description>
icoMoon是一个免费的字体开源网站，兼容性好、适用性广、图标丰富。

</description>
        <pubDate>Wed, 26 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/26/web-font-optimization/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/26/web-font-optimization/</guid>
        
        <category>font</category>
        
        
        <category>Tool</category>
        
      </item>
    
      <item>
        <title>常用的javascript方法</title>
        <description>
整理工作中常用的一些javascript方法：

&lt;ol&gt;
  &lt;li&gt;jsonp&lt;/li&gt;
  &lt;li&gt;localParam&lt;/li&gt;
  &lt;li&gt;round&lt;/li&gt;
  &lt;li&gt;requestAnimFrame&lt;/li&gt;
  &lt;li&gt;object.assign polyfill&lt;/li&gt;
  &lt;li&gt;closest&lt;/li&gt;
  &lt;li&gt;getCookie&lt;/li&gt;
  &lt;li&gt;importJs&lt;/li&gt;
  &lt;li&gt;ajax&lt;/li&gt;
  &lt;li&gt;formatTime&lt;/li&gt;
  &lt;li&gt;isOwnEmpty&lt;/li&gt;
  &lt;li&gt;isWifi&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Wed, 26 Jul 2017 00:00:00 +0800</pubDate>
        <link>http://localhost:4000/2017/07/26/javascript-method/</link>
        <guid isPermaLink="true">http://localhost:4000/2017/07/26/javascript-method/</guid>
        
        <category>Javascript</category>
        
        
        <category>Javascript</category>
        
      </item>
    
  </channel>
</rss>
